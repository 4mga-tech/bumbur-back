{
  "swagger": "2.0",
  "info": {
    "title": "TEST API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "192.168.1.168:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User Signup",
        "description": "Create a new user account with first name, last name, email, phone number, and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@example.com"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "99119911"
                },
                "password": {
                  "type": "string",
                  "example": "securePassword123"
                },
                "role": {
                  "type": "string",
                  "example": "student"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/verify-signup-otp": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Handle Signup OTP",
        "description": "Verify or resend OTP for user signup",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "string",
                  "example": "string"
                },
                "otp": {
                  "type": "string",
                  "example": "string"
                },
                "action": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User Login",
        "description": "Login an existing user with phone number and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/user/refreshToken": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Refresh Access Token",
        "description": "Refresh access token using a valid refresh token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/getUser": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User Data",
        "description": "Retrieve user data using the access token in the Authorization header",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer access token",
            "type": "string",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/user/request-reset": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Request OTP for Password Reset",
        "description": "Request OTP for resetting password using phone number",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/verify-reset-otp": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Verify or Resend OTP for Password Reset",
        "description": "Verify or resend OTP to reset the password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "string",
                  "example": "string"
                },
                "otp": {
                  "type": "string",
                  "example": "string"
                },
                "action": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reset Password",
        "description": "Reset password using a valid reset token and new password",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer reset token",
            "type": "string",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newPassword": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/change-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Change User Password",
        "description": "Change the current password of the user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string",
                  "example": "string"
                },
                "newPassword": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/comment": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Write a new comment",
        "description": "User writes a new top-level comment on a lesson.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "lessonId": {
                  "type": "string",
                  "example": " "
                },
                "content": {
                  "type": "string",
                  "example": "This is a great lesson!"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/user/reply": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Reply to a comment",
        "description": "User replies to an existing comment under a lesson.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "lessonId": {
                  "type": "string",
                  "example": " "
                },
                "parentId": {
                  "type": "string",
                  "example": " "
                },
                "content": {
                  "type": "string",
                  "example": "I agree with this!"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/admin/adminLogin": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "User Login",
        "description": "Login an existing user with phone number and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phoneNumber": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/admin/create": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Create new user",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "string"
                },
                "lastName": {
                  "type": "string",
                  "example": "string"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "role": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/admin/dashboardInfo": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Get admin dashboard stats",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/user/update": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update user info",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "string"
                },
                "firstName": {
                  "type": "string",
                  "example": "string"
                },
                "lastName": {
                  "type": "string",
                  "example": "string"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "role": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/admin/user/delete": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete user",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/getTeacherStat": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Get teacher statistics",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/getAdminLatestStats": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Get dashboard statistics",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/getAllCourseStats": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Get course statistics",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/admin/getAllOrders": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Get admin dashboard stats",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "example": "Bearer your_access_token_here"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/student/getEnrolledCources": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Get Enrolled Courses with Lessons",
        "description": "Returns all courses a student is enrolled in with their lessons",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/student/getAllCources": {
      "get": {
        "tags": [
          "Course"
        ],
        "summary": "Get All Courses with Lessons",
        "description": "Returns all available courses and their lessons",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/student/rateLesson": {
      "post": {
        "tags": [
          "Lesson"
        ],
        "summary": "Rate a Lesson",
        "description": "Allows a student to rate a lesson (1 to 5 stars)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "lessonId": {
                  "type": "string",
                  "example": "lesson_object_id"
                },
                "rating": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/student/logViews": {
      "post": {
        "tags": [
          "Lesson"
        ],
        "summary": "Log lesson view progress",
        "description": "Students can track viewing progress of a lesson",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "lessonId": {
                  "type": "string",
                  "example": "lesson_object_id"
                },
                "progress": {
                  "type": "number",
                  "example": 70
                },
                "completed": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/student/bookMeeting": {
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Book a meeting (Student only)",
        "description": "Allows a student to book a teacher meeting slot",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOi..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "meetingId": {
                  "type": "string",
                  "example": "meeting_object_id"
                },
                "method": {
                  "type": "string",
                  "example": "zoom"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/teacher/getOwnCourses": {
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Get teacher\\'s own courses",
        "description": "Returns all courses and lessons created by the logged-in teacher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/getOwnLessons": {
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Get teacher\\'s own courses",
        "description": "Returns all courses and lessons created by the logged-in teacher",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/createCourse": {
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Create a new course (admin or teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Beginner Piano Course"
                },
                "description": {
                  "type": "string",
                  "example": "Learn piano from scratch."
                },
                "level": {
                  "type": "string",
                  "example": "beginner"
                },
                "price": {
                  "type": "number",
                  "example": 49.99
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/uploadLesson": {
      "post": {
        "tags": [
          "Lesson"
        ],
        "summary": "Create a lesson (admin or teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": " "
                },
                "duration": {
                  "type": "string",
                  "example": " "
                },
                "videoUrl": {
                  "type": "string",
                  "example": " "
                },
                "thumbnailUrl": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/getStudents": {
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Get students enrolled in teacher\\'s courses",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/setmeeting": {
      "post": {
        "tags": [
          "Meeting"
        ],
        "summary": "Set meeting time (teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "example": "2025-08-01T00:00:00Z"
                },
                "startTime": {
                  "type": "string",
                  "example": "13:00"
                },
                "endTime": {
                  "type": "string",
                  "example": "13:30"
                },
                "price": {
                  "type": "number",
                  "example": 10
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/changeTeacherPassword": {
      "post": {
        "tags": [
          "Meeting"
        ],
        "summary": "Set meeting time (teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string",
                  "example": " "
                },
                "newPassword": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/updateCourse": {
      "put": {
        "tags": [
          "Meeting"
        ],
        "summary": "Set meeting time (teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": " "
                },
                "title": {
                  "type": "string",
                  "example": " "
                },
                "description": {
                  "type": "string",
                  "example": " "
                },
                "level": {
                  "type": "string",
                  "example": " "
                },
                "price": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/deleteCourse/{courseId}": {
      "delete": {
        "tags": [
          "Meeting"
        ],
        "summary": "Set meeting time (teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseId": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/updateLesson": {
      "put": {
        "tags": [
          "Meeting"
        ],
        "summary": "Set meeting time (teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "lessonId": {
                  "type": "string",
                  "example": " "
                },
                "videoUrl": {
                  "type": "string",
                  "example": " "
                },
                "duration": {
                  "type": "string",
                  "example": " "
                },
                "thumbnailUrl": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/teacher/deleteLesson/{lessonId}": {
      "delete": {
        "tags": [
          "Meeting"
        ],
        "summary": "Set meeting time (teacher only)",
        "description": "",
        "parameters": [
          {
            "name": "lessonId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer access token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6..."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "lessonId": {
                  "type": "string",
                  "example": " "
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/store/createProduct": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "example": "string"
                },
                "images": {
                  "type": "array",
                  "example": [
                    "string"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "category": {
                  "type": "string",
                  "example": "string"
                },
                "price": {
                  "type": "number",
                  "example": 100
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/store/getAllProducts": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/store/getProductById": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/store/updateProduct": {
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update a product",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "string"
                },
                "title": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "thumbnail": {
                  "type": "string",
                  "example": "string"
                },
                "images": {
                  "type": "array",
                  "example": [
                    "string"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "category": {
                  "type": "string",
                  "example": "string"
                },
                "price": {
                  "type": "number",
                  "example": 100
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/store/deleteProduct": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product",
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/store/addItemToCart": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Add item to cart",
        "description": "Add a product to the user\\'s or guest cart. Requires either accessToken (for logged-in users) or cartId (for guests).",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Bearer accessToken (for logged-in users)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "string"
                },
                "quantity": {
                  "type": "number",
                  "example": 1
                },
                "cartId": {
                  "type": "string",
                  "example": "string (optional for guests)"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/store/assignGuestCartToUser": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Assign guest cart to logged-in user",
        "description": "Merge or assign guest cart items to the user\\'s cart after login",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cartId": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/store/getCart": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get cart",
        "description": "Retrieve all cart items for logged-in or guest user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Bearer accessToken (for logged-in users)"
          },
          {
            "name": "cartId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Cart ID (for guest users)"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/store/removeItemFromCart": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Remove item from cart",
        "description": "Remove a specific product from the cart (logged-in or guest)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Bearer accessToken (for logged-in users)"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "type": "string",
                  "example": "string"
                },
                "cartId": {
                  "type": "string",
                  "example": "string (optional for guest users)"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/store/clearCart": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Clear cart",
        "description": "Remove all items from the cart (logged-in or guest)",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "Bearer accessToken (for logged-in users)"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "cartId": {
                  "type": "string",
                  "example": "string (optional for guest users)"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/store/makeOrder": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Get user cart",
        "description": "Retrieve all cart items for the logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "cartId": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/store/getMyOrders": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Get user cart",
        "description": "Retrieve all cart items for the logged-in user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer accessToken"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}